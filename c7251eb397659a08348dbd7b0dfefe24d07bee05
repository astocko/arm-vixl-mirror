{
  "comments": [
    {
      "key": {
        "uuid": "ba068154_cf05bdc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2016-09-01T12:59:16Z",
      "side": 1,
      "message": "Could you keep the summary line a bit shorter please? We don\u0027t _enforce_ a strict summary length, but the same thing could be said more concisely:\n\n\"Add a PrintDisassembler::DecodeT32() variant.\"",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_0f106500",
        "filename": "src/aarch32/disasm-aarch32.cc",
        "patchSetId": 1
      },
      "lineNbr": 67292,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2016-09-01T12:59:16Z",
      "side": 1,
      "message": "s/value/opcode/\n\nIt\u0027s more specific, and therefore slightly clearer.",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_4ff9cdc7",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2479,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2016-09-01T12:59:16Z",
      "side": 1,
      "message": "Should the new method also be added to the parent (Disassembler) class?",
      "range": {
        "startLine": 2478,
        "startChar": 0,
        "endLine": 2479,
        "endChar": 33
      },
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_afd5d944",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2553,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2016-09-01T12:16:39Z",
      "side": 1,
      "message": "Would size_t make more sense as a return type here?",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_4fc42d92",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2553,
      "author": {
        "id": 1000219
      },
      "writtenOn": "2016-09-01T12:28:43Z",
      "side": 1,
      "message": "Also, I think we need a different name for this method, as it has different semantics. Someone could accidentally call it.\n\nI\u0027m not sure what it should be called though, DecodeBufferT32 maybe, or DecodeT32At.",
      "parentUuid": "ba068154_afd5d944",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_cf377daf",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2553,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-09-01T12:36:20Z",
      "side": 1,
      "message": "It would, but I was being consistent with Disassembler::T32Size().",
      "parentUuid": "ba068154_afd5d944",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_ef46c122",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2553,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-09-01T12:36:20Z",
      "side": 1,
      "message": "The compiler won\u0027t allow an accidental mixup between pointer and integer, will it? Someone will have to write an explicit cast, which seems doubtful to be by accident. Not that I am opposed to renaming it (although I do like keeping it as it is), except that DecodeBufferT32() is a bad idea (we are decoding exactly one instruction, not a buffer of instructions).",
      "parentUuid": "ba068154_4fc42d92",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_8f6c559e",
        "filename": "src/aarch32/disasm-aarch32.h",
        "patchSetId": 1
      },
      "lineNbr": 2553,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2016-09-01T12:50:27Z",
      "side": 1,
      "message": "`int` is better than `size_t` here, at least for VIXL. The value will always be a small immediate. If it\u0027s used in some size_t calculation, it will be extended accordingly. If we returned `size_t`, it can\u0027t necessarily be used in an `int` calculation without compiler warnings about narrowing (depending on the context).\n\nhttps://google.github.io/styleguide/cppguide.html#Integer_Types\n\nI\u0027m also not too worried about the naming; the argument type makes it unambiguous and I think the operation is clear. Others might disagree though.",
      "parentUuid": "ba068154_ef46c122",
      "revId": "c7251eb397659a08348dbd7b0dfefe24d07bee05",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}