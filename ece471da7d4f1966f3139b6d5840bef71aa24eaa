{
  "comments": [
    {
      "key": {
        "uuid": "ba068154_c2b0f9f6",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-23T16:11:39Z",
      "side": 1,
      "message": "Please move this code under a helper. Maybe\n\n    if under_valgrind:\n      tests \u003d FilterOutFalseNegativesUnderValgrind(...)\n\nAnd add a comment about it. This is tricky enough that we don\u0027t want to have to go through the whole investigation every time. We should also document for each test why it fails (incorrectly) under valgrind. (If we know; otherwise please open a task for it. There is a related task open.)",
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_62766d40",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-23T16:24:36Z",
      "side": 1,
      "message": "What about extending the test list file with syntax for comments (i.e. lines beginning with \"#\") and doing it there instead?",
      "parentUuid": "ba068154_c2b0f9f6",
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_023cc12e",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-24T10:10:30Z",
      "side": 1,
      "message": "I\u0027d prefer comments along the code. Will look for other opinions.",
      "parentUuid": "ba068154_62766d40",
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_f85a0c4f",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-26T14:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba068154_023cc12e",
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_c2e2b902",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-23T16:11:39Z",
      "side": 1,
      "message": "`config.dir_tests`\n\nOr we could even define the path to the file directly in `config.py`.",
      "range": {
        "startLine": 133,
        "startChar": 19,
        "endLine": 133,
        "endChar": 42
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_b849a48d",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-26T14:50:34Z",
      "side": 1,
      "message": "No longer relevant.",
      "parentUuid": "ba068154_c2e2b902",
      "range": {
        "startLine": 133,
        "startChar": 19,
        "endLine": 133,
        "endChar": 42
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_02e4c10b",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-23T16:11:39Z",
      "side": 1,
      "message": "`rstrip(\u0027\\n\u0027)`?",
      "range": {
        "startLine": 134,
        "startChar": 35,
        "endLine": 134,
        "endChar": 52
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_4273694d",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-23T16:24:36Z",
      "side": 1,
      "message": "I don\u0027t see any reason for a name to contain whitespace, so what about just rstrip() (without any parameter)? In fact, strip() might be even better.",
      "parentUuid": "ba068154_02e4c10b",
      "range": {
        "startLine": 134,
        "startChar": 35,
        "endLine": 134,
        "endChar": 52
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_223f4527",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-24T10:10:30Z",
      "side": 1,
      "message": "Sounds fine. I just found that `replace` was not ideal.",
      "parentUuid": "ba068154_4273694d",
      "range": {
        "startLine": 134,
        "startChar": 35,
        "endLine": 134,
        "endChar": 52
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_185ef045",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-26T14:50:34Z",
      "side": 1,
      "message": "No longer relevant.",
      "parentUuid": "ba068154_223f4527",
      "range": {
        "startLine": 134,
        "startChar": 35,
        "endLine": 134,
        "endChar": 52
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_22ce2584",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000225
      },
      "writtenOn": "2016-08-23T16:11:39Z",
      "side": 1,
      "message": "Why do we need to change it to a set?",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 26
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_e299bd6f",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-23T16:24:36Z",
      "side": 1,
      "message": "I instinctively cringe at the thought of doing lookups into a list.",
      "parentUuid": "ba068154_22ce2584",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 26
      },
      "revId": "ece471da7d4f1966f3139b6d5840bef71aa24eaa",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}