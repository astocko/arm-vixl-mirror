{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_2605b6c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "as",
      "range": {
        "startLine": 13,
        "startChar": 43,
        "endLine": 13,
        "endChar": 46
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_060a3ad2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "Are we?",
      "range": {
        "startLine": 14,
        "startChar": 58,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_660faee2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "I have not reviewed the patch enough, so here is a question.\n\nDoes this affect the ability of a VIXL user to subclass or scopes to do additional work? For example I would subclass the MAsm, and want to subclass EmissionCheckScope to do some more work.\nI would not want to have to copy the VIXL code in my scope and keep in sync with it.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_a671a679",
        "filename": "src/code-generation-scopes-vixl.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "I like using `1 \u003c\u003c 0`, `1 \u003c\u003c 1`, etc. I find it clearer, especially when we get to \u0027big\u0027 numbers.",
      "range": {
        "startLine": 55,
        "startChar": 26,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_866e2a95",
        "filename": "src/code-generation-scopes-vixl.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "What happens if I specify both?\nShould we use a bitfield instead? C++ supports them natively.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 22
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_e66b9e83",
        "filename": "src/code-generation-scopes-vixl.h",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "I first read that as meaning that this second example was equivalent to the one just above.",
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_c668228a",
        "filename": "src/code-generation-scopes-vixl.h",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1000284
      },
      "writtenOn": "2017-03-02T05:50:18Z",
      "side": 1,
      "message": "Try to `typedef` that automatically in `Scope` using the template parameter types?",
      "range": {
        "startLine": 262,
        "startChar": 2,
        "endLine": 264,
        "endChar": 45
      },
      "revId": "cc4768948ecd7e6ac85b2380325182adbecdd0ee",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}