{
  "comments": [
    {
      "key": {
        "uuid": "ba068154_6ecc9636",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2016-08-31T08:57:16Z",
      "side": 1,
      "message": "I don\u0027t know Python well but this looks strange. Perhaps a dictionary is better, or maybe even arguments with default values (so they can be omitted and specified in any order).",
      "revId": "74f3ba75c07d9919cf4d330d201134089d95e984",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_eefec637",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1000226
      },
      "writtenOn": "2016-08-31T09:46:37Z",
      "side": 1,
      "message": "How about using a dictionary for excess parameters, python has native support for this:\n\ndef FilterKnownTestFailures(tests, **env):\n  if \u0027valgrind\u0027 in env: ...\n\nWhen you call the function simply add a \"name/value\" pair after the positional argument:\n\n  FilterKnownTestFailures(tests, valgrind \u003d True)",
      "parentUuid": "ba068154_6ecc9636",
      "revId": "74f3ba75c07d9919cf4d330d201134089d95e984",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_0eb06a8a",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1000234
      },
      "writtenOn": "2016-08-31T10:27:32Z",
      "side": 1,
      "message": "Keeping in mind that I don\u0027t really know Python (and its idioms), \"env.valgrind\" seemed like a much more natural syntax to me than \"\u0027valgrind\u0027 in env\" (it\u0027s certainly less verbose). Furthermore, while the difference is arguably minor, how would that work for non-boolean parameters? Will it be something like:\n\nif env[\u0027another_param\u0027] \u003d\u003d \u0027value\u0027: ...",
      "parentUuid": "ba068154_eefec637",
      "revId": "74f3ba75c07d9919cf4d330d201134089d95e984",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba068154_4e58b256",
        "filename": "tools/threaded_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1000226
      },
      "writtenOn": "2016-08-31T11:03:26Z",
      "side": 1,
      "message": "Yes you would use the dictionary syntax (dict[key]).\n\nI believe the plan is to add more parameter to the env Namespace later on. If some of those parameters are optional then you will have to test env before accessing it using the \"in\" syntax. At that point using a dictionary directly is probably clearer.",
      "parentUuid": "ba068154_0eb06a8a",
      "revId": "74f3ba75c07d9919cf4d330d201134089d95e984",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}